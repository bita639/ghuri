# Generated by Django 3.1.1 on 2020-12-01 18:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('accounts', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accomodation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accomodation_type', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Activity_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=50)),
                ('select_date', models.DateTimeField()),
                ('participants', models.IntegerField(blank=True, null=True)),
                ('booking_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed')], default='Pending', max_length=30, null=True)),
            ],
            options={
                'ordering': ('package',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('refference', models.IntegerField(blank=True, null=True)),
                ('trip_link', models.TextField(blank=True, null=True)),
                ('subject', models.CharField(max_length=100)),
                ('message', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customize_Tour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_people', models.IntegerField()),
                ('travel_date', models.DateField()),
                ('destination', multiselectfield.db.fields.MultiSelectField(choices=[('Dhaka', 'Dhaka'), ('Chittagong', 'Chittagong'), ('Coxsbazar', 'Coxsbazar'), ('Saint_martin', 'Saint martin'), ('Bandarban', 'Bandarban'), ('Rangamati', 'Rangamati'), ('Khagrachori', 'Khagrachori'), ('Kuakata', 'Kuakata'), ('Sundarban', 'Sundarban'), ('Jessore', 'Jessore'), ('Barishal', 'Barishal')], max_length=200)),
                ('activities', multiselectfield.db.fields.MultiSelectField(choices=[('Trekking', 'Trekking'), ('Adventure', 'Adventure'), ('Climbing', 'Climbing'), ('Hiking', 'Hiking'), ('sightseeing', 'sightseeing'), ('bikeride', 'bikeride')], max_length=200)),
                ('age_group', models.CharField(choices=[('a', '18-35 yrs'), ('b', '36-50 yrs'), ('c', '51-64 yrs'), ('d', '65+ yrs')], max_length=200)),
                ('tour_type', models.CharField(choices=[('e', 'Custom-made trip with guide and/or driver'), ('f', 'Custom-made trip without guide and driver'), ('g', 'Group Tour'), ('h', 'Cruise Tour')], max_length=200)),
                ('accomodation_type', models.CharField(choices=[('basic', 'Basic (Equivalent of 2* hotels.)'), ('comfortable', 'Comfortable (Equivalent of 3* hotels.)'), ('luxury', 'Luxury (Equivalent of 4* hotels and above. )')], max_length=200)),
                ('budget', models.IntegerField()),
                ('planning_stage', models.CharField(choices=[('x', 'I need more information before I can start trip planning'), ('y', 'I am ready to start trip planning'), ('z', "I've done my homework and almost ready to book")], max_length=200)),
                ('trip_title', models.CharField(max_length=100)),
                ('trip_details', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('accepted', 'accepted'), ('rejected', 'rejected'), ('pending', 'pending')], default='pending', max_length=200)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customize_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Days',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Meals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meals_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=250, unique_for_date='publish')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('booking_type', models.CharField(blank=True, choices=[('Instant Booking', 'Instant Booking')], max_length=30, null=True)),
                ('tour_type', models.CharField(blank=True, choices=[('Private', 'Private'), ('Group', 'Group'), ('Private and Group', 'Private and Group')], max_length=50, null=True)),
                ('package_title', models.CharField(max_length=80)),
                ('image', models.ImageField(blank=True, default='packageImage/blank.png', null=True, upload_to='packageImage')),
                ('start_point', models.CharField(max_length=50)),
                ('city_name', models.CharField(max_length=35)),
                ('country', models.CharField(max_length=35)),
                ('end_point', models.CharField(max_length=50)),
                ('age_requirement', models.CharField(max_length=50)),
                ('price', models.IntegerField()),
                ('payable', models.IntegerField()),
                ('special_offer', models.BooleanField(blank=True, default=False, null=True)),
                ('discount_price', models.IntegerField()),
                ('guide_method', models.CharField(blank=True, choices=[('Live Guide/Instructor', 'Live Guide/Instructor'), ('Self guided', 'Self guided')], max_length=30, null=True)),
                ('days', models.IntegerField(blank=True, null=True)),
                ('highlights', models.TextField(blank=True, null=True)),
                ('what_included', models.TextField(blank=True, null=True)),
                ('what_excluded', models.TextField(blank=True, null=True)),
                ('good_to_know', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draf', max_length=10)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('activities', multiselectfield.db.fields.MultiSelectField(choices=[('dd', 'Trekking'), ('b', 'Adventure'), ('sd', 'Climbing'), ('hu', 'Hiking'), ('c', 'Mountains'), ('gh', 'safari'), ('fg', 'Mountain biking'), ('li', 'Active and outdoor'), ('fd', 'Bicycle tours'), ('rt', 'Bungee and swing jumping')], max_length=10)),
                ('accomodation', multiselectfield.db.fields.MultiSelectField(choices=[('a', 'Hotel'), ('b', 'Guest House'), ('p', 'Resort'), ('m', 'Tent')], max_length=10)),
                ('transport', multiselectfield.db.fields.MultiSelectField(choices=[('a', 'Bus'), ('b', 'Plane'), ('p', 'Car'), ('m', 'Jip'), ('f', 'Rickshaw'), ('g', 'Motor cycle'), ('w', 'Ship'), ('v', 'Boat')], max_length=10)),
                ('agency_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agency_idx', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-publish',),
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_mail', models.EmailField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=255)),
                ('name', models.CharField(max_length=50)),
                ('review', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('review_status', models.CharField(choices=[('approve', 'approve'), ('reject', 'reject'), ('pending', 'pending')], default='pending', max_length=10)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='package.package')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.IntegerField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField()),
                ('card_holder_name', models.CharField(max_length=50)),
                ('cvv', models.IntegerField(blank=True, null=True)),
                ('booking_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='booking_payment', to='package.booking')),
            ],
        ),
        migrations.CreateModel(
            name='MapLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locattion_name', models.CharField(max_length=50)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('package_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map_package_id', to='package.package')),
            ],
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='day_id', to='package.days')),
                ('package_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='iti_package_id', to='package.package')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_location', models.ImageField(blank=True, default='packageImage/blank.png', null=True, upload_to='packageImage')),
                ('image_title', models.CharField(max_length=40)),
                ('package_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_id', to='package.package')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=50)),
                ('event_desc', models.TextField()),
                ('guide_name', models.CharField(max_length=30)),
                ('accomodation_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accomodation', to='package.accomodation')),
                ('meals_id', models.ManyToManyField(related_name='meals_id', to='package.Meals')),
            ],
        ),
        migrations.AddField(
            model_name='days',
            name='event_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='event_id', to='package.event'),
        ),
        migrations.CreateModel(
            name='Customize_Tour_Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c_agency_id', to='accounts.agency')),
                ('tour', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='c_tour_id', to='package.customize_tour')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='package',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='booking_package', to='package.package'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Agency_payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100)),
                ('account_name', models.CharField(max_length=100)),
                ('account_number', models.IntegerField()),
                ('swift_code', models.IntegerField()),
                ('agency', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Agency_payment_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type_name', models.CharField(max_length=50)),
                ('activity_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='activity_id', to='package.activity')),
            ],
        ),
        migrations.CreateModel(
            name='Activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type_id', models.ManyToManyField(related_name='activity_type_id', to='package.ActivityType')),
                ('package_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_package', to='package.package')),
            ],
        ),
    ]
